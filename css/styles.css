body {
	margin: 0;
	padding: 0;
	line-height: 1;
	background-color: lightgray;
	font-family: "Roboto", sans-serif;
}

h4 {
	font-weight: normal;
}
/* I had to declare h4 as normal; otherwise, it would always come out bold later on and changing font-weight later wouldn't change that either, for some reason. Changing it up here to affect the whole page seemed to fix that problem. */  

/* Navigation Bar */
.top-navigation {
	width: 100%;
	height: 4.375rem;
	background-color: #FFFFFF;
	border-bottom: 1px solid #DDD;
	position: fixed;
	z-index: 9999;
}

.navigation-content {
	width: 780px;
	height: 4.375rem;
	margin: 0 auto;
	padding: 0 0.938rem;
}

.logo {
	height: 4.375rem;
}

.links {
	float: right;
	font-size: 1.04rem;
	color: #838994;
	margin-top: 1.7rem;
	-webkit-font-smoothing: antialiased;
}

.links li {
	display: inline-block;
	margin-left: 1.553rem;
}

li:hover {
	cursor: pointer;
	color: black;
}

.active {
	color: #4c5058;
	font-weight: 500;
} 

/* Introduction Area */
#introduction {
	background-image: url(../images/first-background.jpg);
	background-position: center bottom;
	background-repeat: no-repeat;
	background-size: cover;
	height: 45.938em;
	padding-top: 1px;
	margin-top: -1px;
	/* the padding and margin-top 1 and -1 is here because the intro-text-area and this introduction area were collapsing into one and when I tried to move the text-area, this intro area was moving with it. The 1 and -1 is one way of fixing this problem. Thinkful suggests using overflow: auto on the parent element, in this case that's the introduction where this is being typed. */
}

#intro-text-area {
	text-align: center;
	color: #FEFEFE;
	margin-top: 237px;
}

#intro-text-area h1 {
	font-size: 3.125em;
	font-weight: 300;
}

#intro-text-area h3 {
	font-size: 1.573rem;
	font-weight: 300;
	margin-top: -21px;
}

#learn-more-btn {
	width: 9.7rem;
	background-color: #f15a29;
	border-color: #f15a29;
	text-shadow: none;
	border-style: none;
	border-radius: 4px;
	padding: 1rem 1.5rem;
	color: white;
	font-size: 1.125rem;
}

#learn-more-btn:hover {
	background-color: #D9400E;
	cursor: pointer;
}

/* Information Area */

#information-area {
	padding-top: 1px;
	margin-top: -1px;
	background-color: #ffffff;
	padding-bottom: 5rem;
} 

#info-content {
	margin-top: 128px;
	text-align: center;
	color: #1d1e21;
}

#info-content h2 {
	font-size: 2.75rem;
	margin: 1.525rem 0 3.125rem;
	font-weight: 300;
}

#info-list {
	list-style: none;
	width: 770px;
	margin: 0 auto;
	overflow: hidden;
}
/* I used overflow: hidden because the floated list elements were not being contained by their parent element and ended up outside of the element. Overflow is a simple way to fix that. You can also use clearfix, which is a bit more complex, but it is a better fix. I just wanted to go simple */

#info-list li {
	float: left;
	width: 33%;
}

#info-list h3 {
	font-weight: 400;
	font-size: 1.553rem;
	margin: 2.5rem 0px 1.875rem;
}

/* footer */
#social {
	padding-top: 1px;
	margin-top: -1px;
	background-color: #ffff;
	padding-bottom: 9.375rem;
}

#social hr {
	border: 0;
	border-top: 1px solid #eaebec;
	margin: 1.313rem 0
}

#footer-content {
	width: 60%;
	margin: 0 auto;
	text-align: center;
	color: #1d1e21;
}

#icons {
	margin: 0 auto;
	list-style: none;
	width: 170px;
	padding: 0;
}
/* I had to set padding to 0 because, for some reason, padding-left was set to 40px, but I couldn't find anywhere in my CSS where that was declared. */

#icons li {
	border: 1px solid #eaebec;
	width: 20px;
	padding: 10px;
	border-radius: 50%;
	display: inline-block;
	margin-right: 8px;
}

/* When it came to centering the icon images in their borders, width, height, and padding together would result in a off-center icon, so I used a bit of padding and width alone and that seemed to do the trick. */

.twitter {
	color: #55ACEE;
}

.facebook {
	color: #6377AA;
}

.instagram {
	color: #3F729B; 
}

#copy {
	font-size: 0.9rem;
	font-weight: 300;
	color: #838994;
	margin-top: 20px;
	display: inline-block;
}

/* Using span caused a problem when I tried moving it down with "margin-top". It wouldn't move! Turns out span is an inline element and those don't accept top and bottom movement (Only left and right). I declared it an inline-block instead and thus was able to move it. */


#font-awesome-stack span {
	margin-top: 15px;
	margin-right: 8px;
}

.fa-circle {
	border: .5px solid lightgray;
	border-radius: 50%;
}

/* I had to style the border myself. There was a border initially with premade font-awesome icon I used, but it had a solid color inside the icon, so I switched it to the "fa-inverse" class, but that got rid of the border. I targeted the icon with the ".fa-circle" class and specified the border and the border-radius. That seemed to work.   


